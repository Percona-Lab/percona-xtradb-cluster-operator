#!/bin/bash

set -o errexit
set -o xtrace

test_dir=$(realpath $(dirname $0))
. ${test_dir}/../functions
cluster="some-name-pxc"

create_namespace $namespace
deploy_operator

desc 'create PSMDB cluster'
kubectl apply \
    -f $conf_dir/secrets.yml \
    -f $conf_dir/client.yml \
    -f $conf_dir/$cluster.yml
desc 'check if all 3 Pods started'
wait_for_running $cluster-node 3

desc 'check data consistency: write data, read from all'
run_mysql \
    'CREATE DATABASE IF NOT EXISTS myApp; use myApp; CREATE TABLE IF NOT EXISTS myApp (id int PRIMARY KEY);' \
    "-h $cluster-nodes -uroot -proot_password"
run_mysql \
    'INSERT myApp.myApp (id) VALUES (100500)' \
    "-h $cluster-nodes -uroot -proot_password"
compare_mysql_cmd "select-1" "SELECT * from myApp.myApp;" "-h $cluster-node-0.$cluster-nodes -uroot -proot_password"
compare_mysql_cmd "select-1" "SELECT * from myApp.myApp;" "-h $cluster-node-1.$cluster-nodes -uroot -proot_password"
compare_mysql_cmd "select-1" "SELECT * from myApp.myApp;" "-h $cluster-node-2.$cluster-nodes -uroot -proot_password"

desc 'scale up from 3 to 5'
sed -e 's/size: 3/size: 5/' $conf_dir/$cluster.yml \
    | kubectl apply -f-

desc 'check if all 5 Pods started'
wait_for_running $cluster-node 5

desc 'check if PVC created'
compare_kubectl pvc/datadir-$cluster-node-3
compare_kubectl pvc/datadir-$cluster-node-4

desc 'check data consistency for new Pods'
compare_mysql_cmd "select-1" "SELECT * from myApp.myApp;" "-h $cluster-node-3.$cluster-nodes -uroot -proot_password"
compare_mysql_cmd "select-1" "SELECT * from myApp.myApp;" "-h $cluster-node-4.$cluster-nodes -uroot -proot_password"

desc 'scale down from 5 to 3'
kubectl apply -f $conf_dir/$cluster.yml

desc 'check if Pod deleted'
wait_for_delete pod/$cluster-node-3
wait_for_delete pod/$cluster-node-4

desc 'check if PVC not deleted'
compare_kubectl pvc/datadir-$cluster-node-3
compare_kubectl pvc/datadir-$cluster-node-4

destroy $namespace
